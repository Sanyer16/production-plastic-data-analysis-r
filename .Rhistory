# Instalar paquete readxl si no está instalado
if (!require("readxl")) install.packages("readxl")
library(readxl)
df <- read_excel("C:/Users/Usuario/OneDrive/Documentos/Ingeniero Datos/Proyectos/ESTADISTICA DESCRIPTIVA EN RSTUDIO/PLANTA PRODUCCION.xlsx",
sheet = "Produccion Plasticos",
.name_repair = "minimal")
head(df)
class(df)
dim(df)
colnames(df)
summary(df)
str(df)
sapply(df, class)
colSums(is.na(df))
# Cargar librerías (si no están cargadas)
if (!require("dplyr")) install.packages("dplyr")
if (!require("lubridate")) install.packages("lubridate")
library(dplyr)
library(lubridate)
df2 <- df %>%
select(
marca_temporal = 1,      # Columna 1: Marca temporal
fecha = 2,               # Columna 2: Fecha
hora_inicio = 3,         # Columna 3: HORA INICIO
hora_final = 14,         # Columna 14: HORA FINAL
tipo_turno = 5,          # Columna 5: Tipo de turno
operario = 4,            # Columna 4: Operario
maquina = 8,             # Columna 8: MAQUINA
conformes = 9,           # Columna 9: Cantidad producidas CONFORMES en el turno
no_conformes = 10,       # Columna 10: Cantidad No conformes en el turno
motivos_parada = 11,     # Columna 11: Motivos de parada de Maquina en el turno
minutos_parada = 12,     # Columna 12: Cantidad de minutos parada la maquina
comentario = 13,         # Columna 13: COMENTARIO GENERAL
semaforo = 33,           # Columna 33: SEMAFORO (verifica posición)
eficiencia = 34          # Columna 34: % EFICIENCIA... (verifica posición)
)
head(df2) %>% View()  # Ver las primeras filas
str(df2)              # Confirmar estructura
View(df2)
library(dplyr)
df2 <- df2 %>% select(-marca_temporal)
colnames(df2)
colSums(is.na(df2))
df2 <- df2 %>% filter(!is.na(tipo_turno))
colSums(is.na(df2))
df2 <- df2 %>%
mutate(                                                    #mutate para modificar columnas dentro de df2
conformes = as.numeric(conformes),
no_conformes = as.numeric(no_conformes),
minutos_parada = ifelse(is.na(minutos_parada), 0, minutos_parada),
minutos_parada = as.numeric(minutos_parada)
)
df2 <- df2 %>%
mutate(
conformes = ifelse(is.na(conformes), 0, conformes),
no_conformes = ifelse(is.na(no_conformes), 0, no_conformes)
)
colSums(is.na(df2))
sum(df2$eficiencia < 0, na.rm = TRUE) #12 valores negativos
mean(df2$eficiencia, na.rm = TRUE)  #0.69572 --> 69,75% (hace el promedio tomando tambien los negativos)
prom_eficiencia <- mean(df2$eficiencia[df2$eficiencia >= 0], na.rm = TRUE)
df2 <- df2 %>%
mutate(eficiencia = ifelse(eficiencia < 0, prom_eficiencia, eficiencia))
sum(df2$eficiencia < 0, na.rm = TRUE)
df2 %>% filter(is.na(fecha)) %>% View()
df2 <- df2 %>% filter(!is.na(fecha))
df2 %>% filter(is.na(fecha)) %>% View()
df2 <- df2 %>%
mutate(eficiencia_pct = eficiencia * 100)
df2 <- df2 %>%
mutate(
eficiencia_pct_label = paste0(round(eficiencia * 100, 2), "%")
)
#confirmar si si es posible tener eficiencia superior al 100%
sum(df2$eficiencia > 1, na.rm = TRUE) #valores por encima del 100% --> 1300
library(dplyr)
df2 %>%
filter(eficiencia > 1) %>%
View()
dim(df2)
library(dplyr)
df2 <- df2 %>%
filter(eficiencia < 2)
dim(df2)
df2 <- df2 %>%
filter(conformes >= 0 | is.na(conformes))
dim(df2)
tabla_turno <- table(df2$tipo_turno)
barplot(tabla_turno,
main = "Cantidad de Turnos por Tipo",
xlab = "Tipo de Turno",
ylab = "Cantidad de registros",
col = "skyblue")
tabla_maquina <- table(df2$maquina)
barplot(tabla_maquina,
main = "Cantidad de Turnos por Máquina",
xlab = "Máquina",
ylab = "Cantidad de registros",
col = "lightgreen",
las = 2)  # gira etiquetas
tabla_maquina_ordenada <- sort(tabla_maquina, decreasing = TRUE)
barplot(tabla_maquina_ordenada,
main = "Cantidad de Turnos por Máquina (Ordenado)",
xlab = "Máquina",
ylab = "Cantidad de registros",
col = "lightgreen",
las = 2)
tabla_turno <- table(df2$tipo_turno)
porcentajes <- round(prop.table(tabla_turno) * 100, 1)
etiquetas <- paste0(names(tabla_turno), " (", porcentajes, "%)")
pie(tabla_turno,
labels = etiquetas,
main = "Distribución de Turnos",
col = c("lightblue", "lightgreen"))
tabla_turno_maquina <- table(df2$tipo_turno, df2$maquina)
barplot(tabla_turno_maquina,
beside = TRUE,      # para agrupar barras
col = c("skyblue", "lightgreen"),   # colores por turno
legend = rownames(tabla_turno_maquina),
main = "Cantidad de Turnos por Máquina",
xlab = "Máquina",
ylab = "Cantidad de registros",
las = 2)
hist(df2$minutos_parada,
freq = FALSE,
breaks = 20,
main = "Distribución de Minutos de Parada (Polígono de Frecuencia)",
xlab = "Minutos de Parada",
ylab = "Densidad",
col = "lightgray",
border = "white")
lines(density(df2$minutos_parada, na.rm = TRUE),
col = "red",
lwd = 2)
conformes_dia <- df2$conformes[df2$tipo_turno == "Turno 12 horas diurno"]
conformes_noche <- df2$conformes[df2$tipo_turno == "Turno 12 horas nocturno"]
# Verificar que tengan datos
length(conformes_dia)
length(conformes_noche)
# Histograma vacío
hist(conformes_dia,
freq = FALSE,
breaks = 20,
main = "Distribución de Conformes por Turno",
xlab = "Cantidad Conformes",
ylab = "Densidad",
col = "white",
border = "white",
ylim = c(0, 0.02))
# Polígono de frecuencia: Turno Diurno
lines(density(conformes_dia, na.rm = TRUE),
col = "blue",
lwd = 2)
# Polígono de frecuencia: Turno Nocturno
lines(density(conformes_noche, na.rm = TRUE),
col = "red",
lwd = 2)
# Leyenda
legend("topright",
legend = c("12h Diurno", "12h Nocturno"),
col = c("blue", "red"),
lwd = 2)
# MEDIA
mean_conformes <- mean(df2$conformes, na.rm = TRUE)
mean_eficiencia <- mean(df2$eficiencia_pct, na.rm = TRUE)
mean_parada <- mean(df2$minutos_parada, na.rm = TRUE)
# MEDIANA
median_conformes <- median(df2$conformes, na.rm = TRUE)
median_eficiencia <- median(df2$eficiencia_pct, na.rm = TRUE)
median_parada <- median(df2$minutos_parada, na.rm = TRUE)
# Mostrar resultados
mean_conformes
median_conformes
mean_eficiencia
median_eficiencia
mean_parada
median_parada
hist(df2$eficiencia_pct,
breaks = 20,
main = "Eficiencia (%) con Media y Mediana",
xlab = "Eficiencia (%)",
col = "lightgray",
border = "black")
# Línea de la media
abline(v = mean(df2$eficiencia_pct, na.rm = TRUE),
col = "blue",
lwd = 2,
lty = 2)
# Línea de la mediana
abline(v = median(df2$eficiencia_pct, na.rm = TRUE),
col = "red",
lwd = 2,
lty = 2)
# Leyenda
legend("topright",
legend = c("Media", "Mediana"),
col = c("blue", "red"),
lwd = 2,
lty = 2)
#Medidas de dispersión
# Rango
range_conformes <- range(df2$conformes, na.rm = TRUE)
range_eficiencia <- range(df2$eficiencia_pct, na.rm = TRUE)
range_parada <- range(df2$minutos_parada, na.rm = TRUE)
# Varianza
var_conformes <- var(df2$conformes, na.rm = TRUE)
var_eficiencia <- var(df2$eficiencia_pct, na.rm = TRUE)
var_parada <- var(df2$minutos_parada, na.rm = TRUE)
# Desviación estándar
sd_conformes <- sd(df2$conformes, na.rm = TRUE)
sd_eficiencia <- sd(df2$eficiencia_pct, na.rm = TRUE)
sd_parada <- sd(df2$minutos_parada, na.rm = TRUE)
range_conformes
var_conformes
sd_conformes
range_eficiencia
var_eficiencia
sd_eficiencia
range_parada
var_parada
sd_parada
boxplot(df2$conformes,
main = "Dispersión de Conformes",
ylab = "Cantidad Conformes",
col = "lightblue",
horizontal = TRUE)
hist(df2$conformes,
breaks = 30,
main = "Distribución de Conformes",
xlab = "Cantidad Conformes",
col = "lightgray",
border = "black")
sd_values <- c(982.85, 34.58, 130.30)
names(sd_values) <- c("Conformes", "Eficiencia (%)", "Minutos Parada")
barplot(sd_values,
main = "Desviación Estándar por Variable",
ylab = "Desviación Estándar",
col = "orange")
quantile(df2$eficiencia_pct, probs = c(0.05, 0.5, 0.87), na.rm = TRUE)
IQR(df2$eficiencia_pct, na.rm = TRUE)
boxplot(eficiencia_pct ~ tipo_turno, data = df2,
main="Eficiencia por Turno",
xlab="Turno", ylab="Eficiencia (%)",
col="lightblue")
plot(df2$conformes, df2$eficiencia_pct,
main = "Eficiencia vs Conformes",
xlab = "Conformes",
ylab = "Eficiencia (%)",
col = "blue")
cor(df2$conformes, df2$eficiencia_pct, use="complete.obs")
boxplot(eficiencia_pct ~ tipo_turno, data = df2,
main="Eficiencia por Turno",
xlab="Turno", ylab="Eficiencia (%)",
col="lightblue")
plot(df2$conformes, df2$eficiencia_pct,
main = "Eficiencia vs Conformes",
xlab = "Conformes",
ylab = "Eficiencia (%)",
col = "blue")
cor(df2$conformes, df2$eficiencia_pct, use="complete.obs")
install.packages("moments")
library(moments)
skewness(df2$eficiencia_pct, na.rm = TRUE)
kurtosis(df2$eficiencia_pct, na.rm = TRUE)
boxplot(conformes ~ maquina, data = df2,
main="Conformes por Máquina",
xlab="Máquina", ylab="Conformes",
col=rainbow(5),
las=2)
df_boxplot <- data.frame(
Conformes = df2$conformes,
Eficiencia = df2$eficiencia_pct,
Minutos_Parada = df2$minutos_parada
)
df_boxplot_long <- tidyr::pivot_longer(
df_boxplot,
cols = everything(),
names_to = "Variable",
values_to = "Valor"
)
boxplot(Valor ~ Variable,
data = df_boxplot_long,
main = "Distribución de Variables Clave",
ylab = "Valor",
col = "lightblue")
if (!require("tidyr")) install.packages("tidyr")
library(tidyr)
df_boxplot <- data.frame(
Conformes = df2$conformes,
Eficiencia = df2$eficiencia_pct,
Minutos_Parada = df2$minutos_parada
)
df_boxplot_long <- tidyr::pivot_longer(
df_boxplot,
cols = everything(),
names_to = "Variable",
values_to = "Valor"
)
boxplot(Valor ~ Variable,
data = df_boxplot_long,
main = "Distribución de Variables Clave con Media",
ylab = "Valor",
col = "lightblue")
media_conformes <- mean(df2$conformes, na.rm = TRUE)
media_eficiencia <- mean(df2$eficiencia_pct, na.rm = TRUE)
media_parada <- mean(df2$minutos_parada, na.rm = TRUE)
points(
x = 1:3,                                          # posición de cada boxplot
y = c(media_conformes, media_eficiencia, media_parada),
col = "red",
pch = 18,                                         # símbolo de rombo
cex = 1.5                                         # tamaño del punto
)
legend("topright",
legend = "Media",
pch = 18,
col = "red")
boxplot(df2$minutos_parada,
main = "Dispersión de Minutos de Parada",
xlab = "Minutos",
ylab = "",
col = "lightgreen",
horizontal = TRUE)
boxplot(df2$conformes,
main = "Dispersión de Conformes",
xlab = "Cantidad de Conformes",
ylab = "",
col = "lightgreen",
horizontal = TRUE)
quantile(df2$conformes, probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE)
quantile(df2$minutos_parada, probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE)
quantile(df2$eficiencia_pct, probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE)
table(df2$maquina)
sort(table(df2$maquina))
table(df2$tipo_turno)
prop.table(table(df2$tipo_turno)) * 100
library(dplyr)
dispercion_eficiencia_maquina <- df2 %>%
group_by(maquina) %>%
summarise(
Desviacion_Estandar = sd(eficiencia_pct, na.rm = TRUE),
Rango_Intercuartilico = IQR(eficiencia_pct, na.rm = TRUE)
)
print(dispercion_eficiencia_maquina)
plot(df2$minutos_parada, df2$eficiencia_pct,
main = "Eficiencia vs Minutos de Parada",
xlab = "Minutos de Parada",
ylab = "Eficiencia (%)",
col = "purple",
pch = 16)
boxplot(eficiencia_pct ~ maquina,
data = df2,
main = "Dispersión de Eficiencia por Máquina",
xlab = "Máquina",
ylab = "Eficiencia (%)",
col = rainbow(length(unique(df2$maquina))),
las = 2)
maquina_num <- as.numeric(as.factor(df2$maquina))
plot(maquina_num, df2$eficiencia_pct,
main = "Eficiencia por Máquina (Scatterplot)",
xlab = "Máquina",
ylab = "Eficiencia (%)",
col = "darkgreen",
pch = 16,
xaxt = "n")  # Oculta etiquetas por defecto
axis(1,
at = sort(unique(maquina_num)),
labels = levels(as.factor(df2$maquina)),
las = 2)
save.image("~/Ingeniero Datos/Proyectos/ESTADISTICA DESCRIPTIVA EN RSTUDIO/rdata.RData")
boxplot(eficiencia_pct ~ maquina,
data = df2,
main = "Dispersión de Eficiencia por Máquina",
xlab = "Máquina",
ylab = "Eficiencia (%)",
col = rainbow(length(unique(df2$maquina))),
las = 2)
plot(df2$minutos_parada, df2$eficiencia_pct,
main = "Eficiencia vs Minutos de Parada",
xlab = "Minutos de Parada",
ylab = "Eficiencia (%)",
col = "purple",
pch = 16)
boxplot(eficiencia_pct ~ maquina,
data = df2,
main = "Dispersión de Eficiencia por Máquina",
xlab = "Máquina",
ylab = "Eficiencia (%)",
col = rainbow(length(unique(df2$maquina))),
las = 2)
